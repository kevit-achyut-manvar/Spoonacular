// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using SpoonacularAPI.ViewModels;
//
//    var recipeInformation = RecipeInformation.FromJson(jsonString);
using System;
using System.Collections.Generic;
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace SpoonacularAPI.ViewModels
{
    public partial class RecipeInformation
    {
        [JsonProperty("results")]
        public List<Result> Results { get; set; }

        [JsonProperty("offset")]
        public long Offset { get; set; }

        [JsonProperty("number")]
        public long Number { get; set; }

        [JsonProperty("totalResults")]
        public long TotalResults { get; set; }
    }

    public partial class Result
    {
        [JsonProperty("vegetarian")]
        public bool Vegetarian { get; set; }

        [JsonProperty("vegan")]
        public bool Vegan { get; set; }

        [JsonProperty("glutenFree")]
        public bool GlutenFree { get; set; }

        [JsonProperty("dairyFree")]
        public bool DairyFree { get; set; }

        [JsonProperty("veryHealthy")]
        public bool VeryHealthy { get; set; }

        [JsonProperty("cheap")]
        public bool Cheap { get; set; }

        [JsonProperty("veryPopular")]
        public bool VeryPopular { get; set; }

        [JsonProperty("sustainable")]
        public bool Sustainable { get; set; }

        [JsonProperty("lowFodmap")]
        public bool LowFodmap { get; set; }

        [JsonProperty("weightWatcherSmartPoints")]
        public long WeightWatcherSmartPoints { get; set; }

        [JsonProperty("gaps")]
        public string Gaps { get; set; }

        [JsonProperty("preparationMinutes")]
        public long PreparationMinutes { get; set; }

        [JsonProperty("cookingMinutes")]
        public long CookingMinutes { get; set; }

        [JsonProperty("aggregateLikes")]
        public long AggregateLikes { get; set; }

        [JsonProperty("healthScore")]
        public long HealthScore { get; set; }

        [JsonProperty("creditsText")]
        public string CreditsText { get; set; }

        [JsonProperty("license")]
        public string License { get; set; }

        [JsonProperty("sourceName")]
        public string SourceName { get; set; }

        [JsonProperty("pricePerServing")]
        public double PricePerServing { get; set; }

        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("readyInMinutes")]
        public long ReadyInMinutes { get; set; }

        [JsonProperty("servings")]
        public long Servings { get; set; }

        [JsonProperty("sourceUrl")]
        public Uri SourceUrl { get; set; }

        [JsonProperty("openLicense")]
        public long OpenLicense { get; set; }

        [JsonProperty("image")]
        public Uri Image { get; set; }

        [JsonProperty("imageType")]
        public string ImageType { get; set; }

        [JsonProperty("summary")]
        public string Summary { get; set; }

        [JsonProperty("cuisines")]
        public List<string> Cuisines { get; set; }

        [JsonProperty("dishTypes")]
        public List<string> DishTypes { get; set; }

        [JsonProperty("diets")]
        public List<string> Diets { get; set; }

        [JsonProperty("occasions")]
        public List<object> Occasions { get; set; }

        [JsonProperty("analyzedInstructions")]
        public List<AnalyzedInstruction> AnalyzedInstructions { get; set; }

        [JsonProperty("spoonacularSourceUrl")]
        public Uri SpoonacularSourceUrl { get; set; }
    }

    public partial class AnalyzedInstruction
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("steps")]
        public List<Step> Steps { get; set; }
    }

    public partial class Step
    {
        [JsonProperty("number")]
        public long Number { get; set; }

        [JsonProperty("step")]
        public string StepStep { get; set; }

        [JsonProperty("ingredients")]
        public List<Ent> Ingredients { get; set; }

        [JsonProperty("equipment")]
        public List<Ent> Equipment { get; set; }

        [JsonProperty("length", NullValueHandling = NullValueHandling.Ignore)]
        public Length Length { get; set; }
    }

    public partial class Ent
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("localizedName")]
        public string LocalizedName { get; set; }

        [JsonProperty("image")]
        public string Image { get; set; }

        [JsonProperty("temperature", NullValueHandling = NullValueHandling.Ignore)]
        public Length Temperature { get; set; }
    }

    public partial class Length
    {
        [JsonProperty("number")]
        public long Number { get; set; }

        [JsonProperty("unit")]
        public string Unit { get; set; }
    }

    public partial class RecipeInformation
    {
        public static RecipeInformation FromJson(string json) => JsonConvert.DeserializeObject<RecipeInformation>(json, SpoonacularAPI.ViewModels.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this RecipeInformation self) => JsonConvert.SerializeObject(self, SpoonacularAPI.ViewModels.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
